name: CI

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # Existing codes likely still have "master" as the primary branch
  # Both are tracked here to keep legacy and new codes working

  workflow_run:
    workflows:
      - "CI-prep"
    branches:
      - "main"
      - "v0.2.0"
    types:
      - completed

  push:
    branches:
      - "main"
      - "v0.2.0"
  pull_request:
    branches:
      - "main"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  prep:
    name: Prep on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    # More info on options: https://github.com/conda-incubator/setup-miniconda
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        channels: conda-forge
        activate-environment: test
        auto-update-conda: true
        auto-activate-base: true
        show-channel-urls: true

    - name: Install conda-lock
      shell: bash -l {0}
      run: conda install conda-lock

    - name: Generate conda-lock file
      shell: bash -l {0}
      run: |
        conda-lock -f pyproject.toml --lockfile conda-${{ matrix.python-version }}.lock
        pwd
        ls -ltr

  test:
    needs: prep
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    # More info on options: https://github.com/conda-incubator/setup-miniconda
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: .github/workflows/conda-${{ matrix.python-version }}.lock

        activate-environment: test
        auto-update-conda: true
        auto-activate-base: false
        show-channel-urls: true

    - name: Run tests

      # conda setup requires this special shell
      shell: bash -l {0}

      run: |
        pytest -v --cov=auto_martini --cov-report=xml --color=yes tests

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
